"use strict";(self.webpackChunkdocusaurus_blog=self.webpackChunkdocusaurus_blog||[]).push([[104],{3030:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>s,default:()=>k,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var t=a(7462),l=(a(7294),a(3905)),i=a(8607),r=a(9960);const o={slug:"nodemailer-dengan-gmail-oauth2-2",title:"Part 2 - Nodemailer dengan Gmail OAuth2",authors:["irul"],tags:["Backend Development","JavaScript for Backend","Nodemailer"],date:"2021-05-04T11:00"},s=void 0,u={permalink:"/nodemailer-dengan-gmail-oauth2-2",source:"@site/blog/2022-12-24-002-nodemailer-dengan-gmail-oauth2.mdx",title:"Part 2 - Nodemailer dengan Gmail OAuth2",description:"",date:"2021-05-04T11:00:00.000Z",formattedDate:"4 Mei 2021",tags:[{label:"Backend Development",permalink:"/tags/backend-development"},{label:"JavaScript for Backend",permalink:"/tags/java-script-for-backend"},{label:"Nodemailer",permalink:"/tags/nodemailer"}],readingTime:2.29,hasTruncateMarker:!0,authors:[{name:"Irul",title:"JavaScript Enthusiast",url:"https://github.com/fulsep",imageURL:"https://github.com/fulsep.png",key:"irul"}],frontMatter:{slug:"nodemailer-dengan-gmail-oauth2-2",title:"Part 2 - Nodemailer dengan Gmail OAuth2",authors:["irul"],tags:["Backend Development","JavaScript for Backend","Nodemailer"],date:"2021-05-04T11:00"},nextItem:{title:"Part 1 - Nodemailer dengan Gmail OAuth2",permalink:"/nodemailer-dengan-gmail-oauth2-1"}},m={authorsImageUrls:[void 0]},p=[],d={toc:p};function k(n){let{components:e,...a}=n;return(0,l.kt)("wrapper",(0,t.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)(i.Z,{src:"/img/blog/mail.png",alt:"mail",mdxType:"ImageCenterize"}),(0,l.kt)("p",null,"Pada tulisan ",(0,l.kt)(r.Z,{to:"/nodemailer-dengan-gmail-oauth2-1",mdxType:"Link"},"sebelumnya")," kita sudah mendapatkan OAuth Client ID, OAuth Client Secret dan juga Refresh Token untuk digunakan pada nodemailer."),(0,l.kt)("p",null,"Di tulisan kali ini kita akan melakukan implementasi untuk nodemailer pada nodejs."),(0,l.kt)("p",null,"Untuk menggunakan nodemailer kita perlu untuk memasang modul ",(0,l.kt)("strong",{parentName:"p"},"nodemailer")," dan juga ",(0,l.kt)("strong",{parentName:"p"},"googleapis")," dengan menjalankan perintah berikut pada project kita"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"npm install nodemailer googleapis\n")),(0,l.kt)("p",null,"Biasanya saya membuat satu file baru, dengan postfix helper untuk membantu saya kedepannya jika ingin mengirimkan email, tinggal panggil saja helper ini"),(0,l.kt)("p",null,"Kita import seluruh module yang akan kita gunakan di helper ini"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// mail.helper.js\n\nconst nodemailer = require('nodemailer');\nconst {google} = require('googleapis');\nconst OAuth2 = google.auth.OAuth2;\n\n//...\n\n")),(0,l.kt)("p",null,"Lalu kita coba konfigurasi OAuth Client ID, OAuth Client Secret dan juga Refresh Token yang sudah kita dapatkan sebelumnya"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// mail.helper.js\n\n//...\n\nconst GMAIL_EMAIL_ADDRESS = ''; // masukkan email yang digunakan pada GCC\nconst GMAIL_CLIENT_ID = ''; // masukkan client id disini\nconst GMAIL_CLIENT_SECRET = ''; // masukkan client secret disini\nconst GMAIL_REFRESH_TOKEN = ''; // masukkan refresh token disini\nconst GMAIL_CALLBACK_URI = 'https://developers.google.com/oauthplayground';\n\nconst oauth2Client = new OAuth2(\n  GMAIL_CLIENT_ID,\n  GMAIL_CLIENT_SECRET,\n  GMAIL_CALLBACK_URI\n);\n\noauth2Client.setCredentials({\n    refresh_token: GMAIL_REFRESH_TOKEN\n});\n\n//...\n\n")),(0,l.kt)("p",null,"Selanjutnya, kita buat method transport dari nodemailer.createTransport untuk mengirimkan email menggunakan nodemailer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// mail.helper.js\n\n//...\n\nconst transport = async () => {\n  const accessToken = await oauth2Client.getAccessToken();\n  \n  return nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      type: 'OAuth2',\n      user: GMAIL_EMAIL_ADDRESS,\n      clientId: GMAIL_CLIENT_ID,\n      clientSecret: GMAIL_CLIENT_SECRET,\n      refreshToken: GMAIL_REFRESH_TOKEN,\n      accessToken: accessToken.token,\n    },\n  });\n  \n};\n\nmodule.exports = transport\n\n")),(0,l.kt)("p",null,"Kode lengkapnya untuk ",(0,l.kt)("inlineCode",{parentName:"p"},"mail.helper.js")," dibawah ini"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// mail.helper.js\n\nconst nodemailer = require('nodemailer');\nconst { google } = require('googleapis');\nconst OAuth2 = google.auth.OAuth2;\n\nconst GMAIL_EMAIL_ADDRESS = ''; // masukkan email yang digunakan pada GCC\nconst GMAIL_CLIENT_ID = ''; // masukkan client id disini\nconst GMAIL_CLIENT_SECRET = ''; // masukkan client secret disini\nconst GMAIL_REFRESH_TOKEN = ''; // masukkan refresh token disini\nconst GMAIL_CALLBACK_URI = 'https://developers.google.com/oauthplayground';\n\nconst oauth2Client = new OAuth2(\n  GMAIL_CLIENT_ID,\n  GMAIL_CLIENT_SECRET,\n  GMAIL_CALLBACK_URI\n);\n\noauth2Client.setCredentials({\n    refresh_token: GMAIL_REFRESH_TOKEN\n});\n\nconst transport = async () => {\n  const accessToken = await oauth2Client.getAccessToken();\n  \n  return nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      type: 'OAuth2',\n      user: GMAIL_EMAIL_ADDRESS,\n      clientId: GMAIL_CLIENT_ID,\n      clientSecret: GMAIL_CLIENT_SECRET,\n      refreshToken: GMAIL_REFRESH_TOKEN,\n      accessToken: accessToken.token,\n    },\n  });\n  \n};\n\nmodule.exports = transport\n\n")),(0,l.kt)("p",null,"Dan untuk menggunakan helper diatas kita tinggal import method transport dari ",(0,l.kt)("inlineCode",{parentName:"p"},"mail.helper.js")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"// penggunaan.js\n\nconst transport = require('./mail.helper.js');\n\nconst mailOptions = {\n    from: 'sender@gmail.com', // pengirim (email kita sebelumnya)\n    to: 'recipient@gmail.com', // penerima email\n    subject: 'Contoh Email', // subject email\n    html: `<p>Hello! Ini adalah email test</p>`, // html body\n}\n\nconst sendMail = async () => {\n    try{\n        const mailer = await transport();\n        await mailer.sendMail(mailOptions);\n        console.log('Email terkirim!');\n    }catch(err){\n        console.log(err);\n        console.log('Gagal!');\n    }\n}\n\nsendMail();\n\n")),(0,l.kt)("p",null,"Nah, jadi begitu cara untuk mengirimkan email dengan Nodemailer dan Gmail OAuth2."),(0,l.kt)("p",null,"Semoga Bermanfaat!"))}k.isMDXComponent=!0}}]);