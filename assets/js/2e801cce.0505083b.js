"use strict";(self.webpackChunkdocusaurus_blog=self.webpackChunkdocusaurus_blog||[]).push([[450],{6029:a=>{a.exports=JSON.parse('{"blogPosts":[{"id":"nodemailer-dengan-gmail-oauth2-2","metadata":{"permalink":"/nodemailer-dengan-gmail-oauth2-2","source":"@site/blog/2022-12-24-002-nodemailer-dengan-gmail-oauth2.mdx","title":"Part 2 - Nodemailer dengan Gmail OAuth2","description":"","date":"2021-05-04T11:00:00.000Z","formattedDate":"4 Mei 2021","tags":[{"label":"Backend Development","permalink":"/tags/backend-development"},{"label":"JavaScript for Backend","permalink":"/tags/java-script-for-backend"},{"label":"Nodemailer","permalink":"/tags/nodemailer"}],"readingTime":2.29,"hasTruncateMarker":true,"authors":[{"name":"Irul","title":"JavaScript Enthusiast","url":"https://github.com/fulsep","imageURL":"https://github.com/fulsep.png","key":"irul"}],"frontMatter":{"slug":"nodemailer-dengan-gmail-oauth2-2","title":"Part 2 - Nodemailer dengan Gmail OAuth2","authors":["irul"],"tags":["Backend Development","JavaScript for Backend","Nodemailer"],"date":"2021-05-04T11:00"},"nextItem":{"title":"Part 1 - Nodemailer dengan Gmail OAuth2","permalink":"/nodemailer-dengan-gmail-oauth2-1"}},"content":"import ImageCenterize from \'../src/components/ImageCenterize.js\';\\r\\nimport Link from \'@docusaurus/Link\';\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/mail.png\\" alt=\\"mail\\" />\\r\\n\\r\\nPada tulisan <Link to=\\"/nodemailer-dengan-gmail-oauth2-1\\">sebelumnya</Link> kita sudah mendapatkan OAuth Client ID, OAuth Client Secret dan juga Refresh Token untuk digunakan pada nodemailer.\\r\\n\\r\\nDi tulisan kali ini kita akan melakukan implementasi untuk nodemailer pada nodejs.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nUntuk menggunakan nodemailer kita perlu untuk memasang modul **nodemailer** dan juga **googleapis** dengan menjalankan perintah berikut pada project kita\\r\\n\\r\\n```sh\\r\\nnpm install nodemailer googleapis\\r\\n```\\r\\n\\r\\nBiasanya saya membuat satu file baru, dengan postfix helper untuk membantu saya kedepannya jika ingin mengirimkan email, tinggal panggil saja helper ini\\r\\n\\r\\n\\r\\nKita import seluruh modul yang akan kita gunakan di helper ini\\r\\n\\r\\n```js\\r\\n// mail.helper.js\\r\\n\\r\\nconst nodemailer = require(\'nodemailer\');\\r\\nconst {google} = require(\'googleapis\');\\r\\nconst OAuth2 = google.auth.OAuth2;\\r\\n\\r\\n//...\\r\\n\\r\\n```\\r\\n\\r\\nLalu kita coba konfigurasi OAuth Client ID, OAuth Client Secret dan juga Refresh Token yang sudah kita dapatkan sebelumnya\\r\\n\\r\\n```js\\r\\n// mail.helper.js\\r\\n\\r\\n//...\\r\\n\\r\\nconst GMAIL_EMAIL_ADDRESS = \'\'; // masukkan email yang digunakan pada GCC\\r\\nconst GMAIL_CLIENT_ID = \'\'; // masukkan client id disini\\r\\nconst GMAIL_CLIENT_SECRET = \'\'; // masukkan client secret disini\\r\\nconst GMAIL_REFRESH_TOKEN = \'\'; // masukkan refresh token disini\\r\\nconst GMAIL_CALLBACK_URI = \'https://developers.google.com/oauthplayground\';\\r\\n\\r\\nconst oauth2Client = new OAuth2(\\r\\n  GMAIL_CLIENT_ID,\\r\\n  GMAIL_CLIENT_SECRET,\\r\\n  GMAIL_CALLBACK_URI\\r\\n);\\r\\n\\r\\noauth2Client.setCredentials({\\r\\n    refresh_token: GMAIL_REFRESH_TOKEN\\r\\n});\\r\\n\\r\\n//...\\r\\n\\r\\n```\\r\\n\\r\\nSelanjutnya, kita buat method transport dari nodemailer.createTransport untuk mengirimkan email menggunakan nodemailer\\r\\n\\r\\n```js\\r\\n// mail.helper.js\\r\\n\\r\\n//...\\r\\n\\r\\nconst transport = async () => {\\r\\n  const accessToken = await oauth2Client.getAccessToken();\\r\\n  \\r\\n  return nodemailer.createTransport({\\r\\n    service: \'gmail\',\\r\\n    auth: {\\r\\n      type: \'OAuth2\',\\r\\n      user: GMAIL_EMAIL_ADDRESS,\\r\\n      clientId: GMAIL_CLIENT_ID,\\r\\n      clientSecret: GMAIL_CLIENT_SECRET,\\r\\n      refreshToken: GMAIL_REFRESH_TOKEN,\\r\\n      accessToken: accessToken.token,\\r\\n    },\\r\\n  });\\r\\n  \\r\\n};\\r\\n\\r\\nmodule.exports = transport\\r\\n\\r\\n```\\r\\n\\r\\nKode lengkapnya untuk ```mail.helper.js``` dibawah ini\\r\\n\\r\\n```js\\r\\n// mail.helper.js\\r\\n\\r\\nconst nodemailer = require(\'nodemailer\');\\r\\nconst { google } = require(\'googleapis\');\\r\\nconst OAuth2 = google.auth.OAuth2;\\r\\n\\r\\nconst GMAIL_EMAIL_ADDRESS = \'\'; // masukkan email yang digunakan pada GCC\\r\\nconst GMAIL_CLIENT_ID = \'\'; // masukkan client id disini\\r\\nconst GMAIL_CLIENT_SECRET = \'\'; // masukkan client secret disini\\r\\nconst GMAIL_REFRESH_TOKEN = \'\'; // masukkan refresh token disini\\r\\nconst GMAIL_CALLBACK_URI = \'https://developers.google.com/oauthplayground\';\\r\\n\\r\\nconst oauth2Client = new OAuth2(\\r\\n  GMAIL_CLIENT_ID,\\r\\n  GMAIL_CLIENT_SECRET,\\r\\n  GMAIL_CALLBACK_URI\\r\\n);\\r\\n\\r\\noauth2Client.setCredentials({\\r\\n    refresh_token: GMAIL_REFRESH_TOKEN\\r\\n});\\r\\n\\r\\nconst transport = async () => {\\r\\n  const accessToken = await oauth2Client.getAccessToken();\\r\\n  \\r\\n  return nodemailer.createTransport({\\r\\n    service: \'gmail\',\\r\\n    auth: {\\r\\n      type: \'OAuth2\',\\r\\n      user: GMAIL_EMAIL_ADDRESS,\\r\\n      clientId: GMAIL_CLIENT_ID,\\r\\n      clientSecret: GMAIL_CLIENT_SECRET,\\r\\n      refreshToken: GMAIL_REFRESH_TOKEN,\\r\\n      accessToken: accessToken.token,\\r\\n    },\\r\\n  });\\r\\n  \\r\\n};\\r\\n\\r\\nmodule.exports = transport\\r\\n\\r\\n```\\r\\n\\r\\nDan untuk menggunakan helper diatas kita tinggal import method transport dari ```mail.helper.js```\\r\\n\\r\\n```js\\r\\n// penggunaan.js\\r\\n\\r\\nconst transport = require(\'./mail.helper.js\');\\r\\n\\r\\nconst mailOptions = {\\r\\n    from: \'sender@gmail.com\', // pengirim (email kita sebelumnya)\\r\\n    to: \'recipient@gmail.com\', // penerima email\\r\\n    subject: \'Contoh Email\', // subject email\\r\\n    html: `<p>Hello! Ini adalah email test</p>`, // html body\\r\\n}\\r\\n\\r\\nconst sendMail = async () => {\\r\\n    try{\\r\\n        const mailer = await transport();\\r\\n        await mailer.sendMail(mailOptions);\\r\\n        console.log(\'Email terkirim!\');\\r\\n    }catch(err){\\r\\n        console.log(err);\\r\\n        console.log(\'Gagal!\');\\r\\n    }\\r\\n}\\r\\n\\r\\nsendMail();\\r\\n\\r\\n```\\r\\n\\r\\nNah, jadi begitu cara untuk mengirimkan email dengan Nodemailer dan Gmail OAuth2.\\r\\n\\r\\nSemoga Bermanfaat!"},{"id":"nodemailer-dengan-gmail-oauth2-1","metadata":{"permalink":"/nodemailer-dengan-gmail-oauth2-1","source":"@site/blog/2022-12-24-001-nodemailer-dengan-gmail-oauth2.mdx","title":"Part 1 - Nodemailer dengan Gmail OAuth2","description":"","date":"2021-05-04T10:00:00.000Z","formattedDate":"4 Mei 2021","tags":[{"label":"Backend Development","permalink":"/tags/backend-development"},{"label":"JavaScript for Backend","permalink":"/tags/java-script-for-backend"},{"label":"Nodemailer","permalink":"/tags/nodemailer"}],"readingTime":2.975,"hasTruncateMarker":true,"authors":[{"name":"Irul","title":"JavaScript Enthusiast","url":"https://github.com/fulsep","imageURL":"https://github.com/fulsep.png","key":"irul"}],"frontMatter":{"slug":"nodemailer-dengan-gmail-oauth2-1","title":"Part 1 - Nodemailer dengan Gmail OAuth2","authors":["irul"],"tags":["Backend Development","JavaScript for Backend","Nodemailer"],"date":"2021-05-04T10:00"},"prevItem":{"title":"Part 2 - Nodemailer dengan Gmail OAuth2","permalink":"/nodemailer-dengan-gmail-oauth2-2"},"nextItem":{"title":"Axios Untuk Pemula","permalink":"/axios-untuk-pemula"}},"content":"import ImageCenterize from \'../src/components/ImageCenterize.js\';\\r\\nimport Link from \'@docusaurus/Link\';\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/mail.png\\" alt=\\"mail\\" />\\r\\n\\r\\nNodemailer adalah modul JavaScript yang bisa kita manfaatkan untuk mengirimkan pesan email dengan mengkonfigurasi SMTP dari email server yang kita miliki.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nTapi sayangnya, seringkali dalam masa development kita hanya fokus untuk melihat bagaimana email yang kita kirim dari server diterima oleh pengguna, jadi kita belum memiliki mail server yang mungkin harganya tidak murah.\\r\\n\\r\\nBeruntungnya Gmail menyediakan opsi untuk mengirimkan email melalui server mereka secara programmatically, kita bisa memanfaatkannya untuk sementara waktu. Karena dihilangkannya opsi \\"Less secure apps\\" pada akun google, kita bisa memanfaatkan cara lain, yakni dengan menggunakan OAuth2.\\r\\n\\r\\nPada tulisan bagian pertama ini, kita akan melakukan konfigurasi project pada Google Cloud Console, berikut cara konfigurasinya:\\r\\n\\r\\nMasuk ke <Link to=\\"https://console.cloud.google.com/getting-started?pli=1\\">Google Cloud Console</Link> dan buatlah project baru\\r\\n\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/1.png\\" alt=\\"step 1\\" />\\r\\n\\r\\nKlik ikon hamburger menu, pilih API Library\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/2-1.png\\" alt=\\"step 2-1\\" />\\r\\n\\r\\nMasukkan Gmail pada kolom pencarian\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/2-2.png\\" alt=\\"step 2-2\\" />\\r\\n\\r\\nPilih Gmail API\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/2-3.png\\" alt=\\"step 2-3\\" />\\r\\n\\r\\nTekan Enable\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/2-4.png\\" alt=\\"step 2-4\\" />\\r\\n\\r\\nSelanjutnya, masuk ke menu **APIs & Services** pilih **OAuth consent screen**\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/2.png\\" alt=\\"step 2\\" />\\r\\n\\r\\nPilih **External** dan tekan Create\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/3.png\\" alt=\\"step 3\\" />\\r\\n\\r\\nMasukkan **App name**, bebas. Disini saya masukkan **Nodemailer**, dan pilih **User support email** dari dropdown yang disediakan\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/4.png\\" alt=\\"step 4\\" />\\r\\n\\r\\nScroll kebawah sedikit disana akan ada kolom untuk email, isi dengan email anda dan tekan Save and Continue\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/5.png\\" alt=\\"step 5\\" />\\r\\n\\r\\nSelanjutnya, Tekan Add or Remove Scope\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/6.png\\" alt=\\"step 6\\" />\\r\\n\\r\\nPada kolom filter masukkan Gmail dan pilih Gmail API\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/6-1.png\\" alt=\\"step 6-1\\" />\\r\\n\\r\\nLalu centang Gmail API dan tekan Update\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/6-2.png\\" alt=\\"step 6-2\\" />\\r\\n\\r\\nJika pada section **Your restricted scope** sudah ada Gmail Scope, tekan Save and Continue\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/6-3.png\\" alt=\\"step 6-3\\" />\\r\\n\\r\\nTekan add user pada section Test users\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/6-4.png\\" alt=\\"step 6-4\\" />\\r\\n\\r\\nMasukkan email dari akun google yang sedang dipakai, lalu tekan Save and Continue\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/6-5.png\\" alt=\\"step 6-5\\" />\\r\\n\\r\\nKembali ke menu, pilih Credentials\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/7.png\\" alt=\\"step 7\\" />\\r\\n\\r\\nKlik Create Credentials dan pilih OAuth Client ID\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/8.png\\" alt=\\"step 8\\" />\\r\\n\\r\\nPilih Web Application untuk Application Type dan Name diisi bebas, disini saya masukkan Nodemailer\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/9.png\\" alt=\\"step 9\\" />\\r\\n\\r\\nPada section Autorized redirect URIs masukkan:\\r\\n\\r\\n```\\r\\nhttps://developers.google.com/oauthplayground\\r\\n```\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/10.png\\" alt=\\"step 10\\" />\\r\\n\\r\\nSimpan Client ID dan Client Secret untuk dipakai selanjutnya di OAuth Playground\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/11.png\\" alt=\\"step 11\\" />\\r\\n\\r\\nMasuk ke <Link to=\\"https://developers.google.com/oauthplayground\\">OAuth 2.0 Playground</Link> dan pilih ikon gear pada samping kanan atas, centang **Use your own OAuth credentials** dan masukkan Client ID dan Client Secret yang sebelumnya kita dapatkan, lalu klik Close.\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/12.png\\" alt=\\"step 12\\" />\\r\\n\\r\\nPada Step 1 bagian kanan Playground, cari Gmail API v1 dan centang `https://mail.google.com/`, lalu tekan Authorize APIs\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/13.png\\" alt=\\"step 13\\" />\\r\\n\\r\\nKita akan dialihkan ke halaman Authorization, pilih akun sedang kita pakai\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/14.png\\" alt=\\"step 14\\" />\\r\\n\\r\\nAkan muncul alert seperti berikut, kita bisa menekan Continue saja\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/15.png\\" alt=\\"step 15\\" />\\r\\n\\r\\nLalu tekan Continue lagi\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/16.png\\" alt=\\"step 16\\" />\\r\\n\\r\\nNantinya, kita akan dikembalikan ke halaman playground Step 2 dengan Authorization Code yang sudah terisi, Tekan **Exchange authorization code for tokens**\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/17.png\\" alt=\\"step 17\\" />\\r\\n\\r\\nKolom refresh token akan terisi dan kita bisa simpan, karena ini akan kita gunakan di nodemailer pada tulisan bagian berikutnya.\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/nodemailer-dengan-gmail-oauth2/18.png\\" alt=\\"step 18\\" />\\r\\n\\r\\nWrap up:\\r\\n\\r\\nJadi, pada bagian pertama ini kita sudah mendapatkan OAuth Client ID, OAuth Client Secret dan juga Refresh Token yang bisa kita gunakan pada nodemailer, untuk selanjutnya kita bisa lihat di bagian kedua\\r\\n\\r\\n<Link to=\\"/nodemailer-dengan-gmail-oauth2-2\\">Part 2 - Nodemailer dengan Gmail OAuth2</Link>"},{"id":"axios-untuk-pemula","metadata":{"permalink":"/axios-untuk-pemula","source":"@site/blog/2022-12-21-001-axios-untuk-pemula.mdx","title":"Axios Untuk Pemula","description":"","date":"2021-05-03T10:00:00.000Z","formattedDate":"3 Mei 2021","tags":[{"label":"Frontend Development","permalink":"/tags/frontend-development"},{"label":"ReactJS","permalink":"/tags/react-js"},{"label":"JavaScript for Frontend","permalink":"/tags/java-script-for-frontend"},{"label":"Beginner Frontend","permalink":"/tags/beginner-frontend"}],"readingTime":2.255,"hasTruncateMarker":true,"authors":[{"name":"Irul","title":"JavaScript Enthusiast","url":"https://github.com/fulsep","imageURL":"https://github.com/fulsep.png","key":"irul"}],"frontMatter":{"slug":"axios-untuk-pemula","title":"Axios Untuk Pemula","authors":["irul"],"tags":["Frontend Development","ReactJS","JavaScript for Frontend","Beginner Frontend"],"date":"2021-05-03T10:00"},"prevItem":{"title":"Part 1 - Nodemailer dengan Gmail OAuth2","permalink":"/nodemailer-dengan-gmail-oauth2-1"},"nextItem":{"title":"Selamat Datang!","permalink":"/selamat-datang"}},"content":"import ImageCenterize from \'../src/components/ImageCenterize.js\';\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/link.png\\" alt=\\"link\\" />\\r\\n\\r\\nAxios adalah sebuah library JavaScript yang memungkinkan kita untuk mengirim HTTP request (misalnya, untuk mengambil data dari sebuah API atau untuk mengirim data ke API) ke server.\\r\\n\\r\\nAxios memudahkan kita untuk melakukan operasi HTTP tanpa harus menggunakan fitur built-in browser seperti XMLHttpRequest atau fetch.\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nUntuk menggunakan Axios, pertama-tama kita perlu memasangnya di proyek yang sedang kita kerjakan. Kita dapat melakukannya dengan menjalankan perintah npm (jika kita menggunakan npm) atau yarn (jika kita menggunakan yarn) berikut:\\r\\n\\r\\n```sh\\r\\nnpm install axios\\r\\n```\\r\\natau\\r\\n\\r\\n```sh\\r\\nyarn add axios\\r\\n```\\r\\n\\r\\nSetelah Axios terpasang, kita dapat mengimpor library tersebut di dalam proyek kita dengan cara seperti ini:\\r\\n\\r\\n```js\\r\\nimport axios from \'axios\';\\r\\n```\\r\\n\\r\\nAtau, jika kita tidak menggunakan ES6 import, kita dapat menggunakan require:\\r\\n\\r\\n```js\\r\\nconst axios = require(\'axios\');\\r\\n```\\r\\n\\r\\nSetelah Axios terpasang dan diimpor ke dalam proyek kita, kita dapat mulai menggunakannya untuk mengirim HTTP request. Berikut adalah contoh sederhana untuk mengirim request GET ke sebuah API:\\r\\n\\r\\n```js\\r\\naxios.get(\'https://api.example.com/endpoint\')\\r\\n  .then(response => {\\r\\n    // handling sukses\\r\\n  })\\r\\n  .catch(error => {\\r\\n    // handling error\\r\\n  });\\r\\n```\\r\\n\\r\\nRequest GET di atas akan mengirim HTTP request ke alamat URL yang diberikan, dan kemudian akan memanggil callback then jika request tersebut berhasil, atau memanggil callback catch jika terjadi error.\\r\\n\\r\\nKita juga dapat menambahkan parameter ke request GET dengan cara seperti ini:\\r\\n\\r\\n```js\\r\\naxios.get(\'https://api.example.com/endpoint\', {\\r\\n  params: {\\r\\n    key1: \'value1\',\\r\\n    key2: \'value2\'\\r\\n  }\\r\\n})\\r\\n  .then(response => {\\r\\n    // handling sukses\\r\\n  })\\r\\n  .catch(error => {\\r\\n    // handling error\\r\\n  });\\r\\n```\\r\\n\\r\\nUntuk mengirim request POST, kita dapat menggunakan metode post yang sama seperti get, namun dengan menambahkan data yang akan dikirim ke server sebagai argument kedua:\\r\\n\\r\\n```js\\r\\naxios.post(\'https://api.example.com/endpoint\', {\\r\\n    key1: \'value1\',\\r\\n    key2: \'value2\'\\r\\n})\\r\\n  .then(response => {\\r\\n    // handling sukses\\r\\n  })\\r\\n  .catch(error => {\\r\\n    // handling error\\r\\n  });\\r\\n```\\r\\n\\r\\nRequest POST di atas akan mengirimkan dalam bentuk application/json, jika kita ingin mengirimkan request dalam bentuk application/x-www-form-urlencoded kita dapat menuliskannya dengan cara berikut:\\r\\n\\r\\n```js\\r\\nconst form = new URLSearchParams();\\r\\nform.append(\'param1\', \'value1\');\\r\\nform.append(\'param2\', \'value2\');\\r\\n\\r\\naxios.post(\'https://api.example.com/endpoint\', form)\\r\\n  .then(response => {\\r\\n    // handling sukses\\r\\n  })\\r\\n  .catch(error => {\\r\\n    // handling error\\r\\n  });\\r\\n```\\r\\n\\r\\nKita juga dapat menambahkan pengaturan tambahan seperti headers atau timeout kedalam request dengan menambahkan objek konfigurasi sebagai argumen ketiga ke metode post:\\r\\n\\r\\n```js\\r\\naxios.post(\'https://api.example.com/endpoint\', {\\r\\n  key1: \'value1\',\\r\\n  key2: \'value2\'\\r\\n}, {\\r\\n  headers: {\\r\\n    \'Content-Type\': \'application/json\'\\r\\n  },\\r\\n  timeout: 1000\\r\\n})\\r\\n  .then(response => {\\r\\n    // handling sukses\\r\\n  })\\r\\n  .catch(error => {\\r\\n    // handling error\\r\\n  });\\r\\n```\\r\\n\\r\\nSelain metode get dan post, Axios juga menyediakan beberapa metode lain yang dapat digunakan untuk mengirim HTTP request seperti delete, put, dan patch. Kita dapat menggunakan metode-metode tersebut dengan cara yang sama seperti yang telah dijelaskan di atas.\\r\\n\\r\\nUntuk lebih lengkapnya, kita dapat mengacu pada dokumentasi Axios di sini: [https://github.com/axios/axios](https://github.com/axios/axios#readme)\\r\\n\\r\\nSemoga membantu!"},{"id":"selamat-datang","metadata":{"permalink":"/selamat-datang","source":"@site/blog/2022-12-20-001-selamat-datang.mdx","title":"Selamat Datang!","description":"","date":"2021-05-02T10:00:00.000Z","formattedDate":"2 Mei 2021","tags":[{"label":"General","permalink":"/tags/general"}],"readingTime":0.35,"hasTruncateMarker":true,"authors":[{"name":"Irul","title":"JavaScript Enthusiast","url":"https://github.com/fulsep","imageURL":"https://github.com/fulsep.png","key":"irul"}],"frontMatter":{"slug":"selamat-datang","title":"Selamat Datang!","authors":["irul"],"tags":["General"],"date":"2021-05-02T10:00"},"prevItem":{"title":"Axios Untuk Pemula","permalink":"/axios-untuk-pemula"}},"content":"import ImageCenterize from \'../src/components/ImageCenterize.js\';\\r\\n\\r\\n<ImageCenterize src=\\"/img/blog/welcoming.png\\" alt=\\"welcoming\\" />\\r\\n\\r\\nSelamat datang di blog yang baru saja saya buka!\\r\\n\\r\\n\x3c!--truncate--\x3e\\r\\n\\r\\nSaya pribadi sangat senang bisa berbagi informasi, wawasan, dan ide-ide denganmu melalui platform ini. Saya berharap kamu akan menemukan banyak hal yang bermanfaat dan menyenangkan saat membaca artikel disini.\\r\\n\\r\\nTerima kasih telah berkunjung dan Saya berharap Kamu akan terus mengunjungi website ini di masa yang akan datang.\\r\\n\\r\\nSelamat membaca dan juga belajar!"}]}')}}]);